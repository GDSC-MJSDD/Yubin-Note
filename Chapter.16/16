# 16장. 프로퍼티 어트리뷰트

## 16.1 내부 슬롯과 내부 메서드

---

내부 슬롯과 내부 메서드 → 실제로 동작하지만 외부로 공개된 객체의 프로퍼티 X
                                             직접적으로 접근하거나 호출할 수 있는 방법 제공 X
                                             일부는 간접적으로 접근할 수 있는 수단 제공

## 16.2 프로퍼티 어트리뷰트와 프로퍼티 디스크립터 객체

---

자바스크립트 엔진은 프로퍼티를 생성할 때 프로퍼티의 상태를 나타내는 프로퍼티 어트리뷰트를 기본값으로 자동 정의함

**프로퍼티의 상태**

- 프로퍼티의 값
- 값의 갱신 가능 여부
- 열거 가능 여부
- 재정의 가능 여부

**프로퍼티 어트리뷰트**

: 자바스크립트 엔진이 관리하는 내부 상태 값인 내부 슬롯 [[Value]],[[Writable]],[[Enumerable]],[[Configurable]] 

→ 프로퍼티 어트리뷰트에 직접 접근X
    Object.getOwnPropertyDescriptor 메서드를 사용하여 간접 확인 가능

Object.getOwnPropertyDescriptor 메서드 → 프로퍼티 디스크립터 객체 반환함

IF) 존재하지 않는 프로퍼티나 상속받은 프로퍼티에 대한 프로퍼티 디스크립터를 요구하면 undefined 반환됨

## 16.3 데이터 프로퍼티와 접근자 프로퍼티

---

프로퍼티 - 데이터 프로퍼티, 접근자 프로퍼티

- 데이터 프로퍼티
: 키와 값으로 구성된 일반적인 프로퍼티
- 접근자 프로퍼티
: 자체적으로 값을 갖지 않고 다른 데이터 프로퍼티의 값을 읽거나 저장할 때 호출되는 접근자 함수로 구성된 프로퍼티

### 16.3.1 데이터 프로퍼티

| 프로퍼티 어트리뷰트 | 프로퍼티 디스크립터
객체의 프로퍼티 |                                              설명 |
| --- | --- | --- |
| [[Value]] | value | 프로퍼티 키를 통해 프로퍼티 값에 접근하면 반환되는 값 |
| [[Writable]] | writable | 프로퍼티 값의 변경 가능 여부를 나타내며 불리언 값을 가짐 |
| [[Enumerable]] | enumerable | 프로퍼티의 열거 가능 여부를 나타내며 불리언 값을 가짐 |
| [[Configurable]] | configurable | 프로퍼티의 재정의 가능 여부를 나타내며 불리언 값을 가짐 |

### 16.3.2 접근자 프로퍼티

| 프로퍼티 어트리뷰트 | 프로퍼티 디스크립터
객체의 프로퍼티 |                                                설명 |
| --- | --- | --- |
| [[Get]] | get | 접근자 프로퍼티를 통해데이터 프로퍼티의 값을 읽을 때 호출되는 접근자 함수  |
| [[Set]] | set | 접근자 프로퍼티를 통해 데이터 프로퍼티의 값을 저장할 때 호출되는 접근자 함수 |
| [[Enumerable]] | enumerable | 데이터 프로퍼티의 [[Enumerable]]과 같음 |
| [[Configurable]] | configurable | 데이터 프로퍼티의 [[Configurable]]과 같음 |

### 16.4 프로퍼티 정의

: 새로운 프로퍼티를 추가하면서 프로퍼티 어트리뷰트를 명시적으로 정의하거나, 기존 프로퍼티의 프로퍼티 어트리뷰트를 재정의하는 것

→ 객체의 프로퍼티가 어떻게 동작해야 하는지 명확히 정의 가능

| 프로퍼티 디스크립터 객체의 프로퍼티 | 대응하는 프로퍼티 어트리뷰트 | 생략했을 때의 기본값 |
| --- | --- | --- |
| value | [[Value]] | undefined |
| get | [[Get]] | undefined |
| set | [[Set]] | undefined |
| writable | [[Writable]] | false |
| enumerable | [[Enumerable]] | false |
| configurable | [[Configurable]] | false |

## 16.5 객체 변경 방지

---

객체는 변경 가능한 값이므로 재할당 없이 직접 변경 가능

프로퍼티를 추가하거나 삭제 가능, 프로퍼티 값을 갱신

| 구분 | 메서드 | 프로퍼티 추가 | 프로퍼티 삭제 | 프로퍼티 값 읽기 | 프로퍼티 값 쓰기 | 프로퍼티 어트피뷰트 재정의 |
| --- | --- | --- | --- | --- | --- | --- |
| 객체 확장 금지 | Object.preventExtensions | X | O | O | O | O |
| 객체 밀봉 | Object.seal | X | X | O | O | X |
| 객체 동결 | Object.freeze | X | X | O | X | X |

### 16.5.1 객체 확장 금지

확장이 금지된 객체는 프로퍼티 추가가 금지됨

프로퍼티는 프로퍼티 동적 추가와 Object.defineProterty 메서드로 추가할 수 있음

→ 이 두 가지 추가 방법이 모두 금지됨

### 16.5.2 객체 밀봉

Object.seal 메서드는 객체를 밀봉함

객체 밀봉 : 프로퍼티 추가 및 삭제와 프로퍼티 어트리뷰트 재정의 금지 의미

밀봉된 객체는 읽기와 쓰기만 가능

밀봉된 객체인지 여부는 Object.isSealed 메서드로 확인할 수 있음

### 16.5.3 객체 동결

Object.freeze 메서드는 객체를 동결함

객체 동결 : 프로퍼티 추가 및 삭데와 프로퍼티 어트리뷰트 재정의 금지, 프로퍼티 값 갱신 금지 의미

동결된 객체는 읽기만 가능

동결된 객체인지 여부는 Object.isFrozen 메서드로 확인할 수 있음

### 16.5.4 불변 객체

변경 방지 메서드들은 얕은 변경 방지로 직속 프로퍼티만 변경이 방지되고 중첩 객체까지는 영향 미치지 못함 → 구현하려면 객체를 값으로 갖는 모든 프로퍼티에 대해 Object.freeze 메서드 호출해야 함

Object.freeze 메서드로 객체를 동결하여도 중첩 객체까지 동결할 수 없음
